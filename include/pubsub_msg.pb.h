// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pubsub_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_pubsub_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_pubsub_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_pubsub_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_pubsub_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pubsub_5fmsg_2eproto;
class pubsub_msg_t;
class pubsub_msg_tDefaultTypeInternal;
extern pubsub_msg_tDefaultTypeInternal _pubsub_msg_t_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::pubsub_msg_t* Arena::CreateMaybeMessage<::pubsub_msg_t>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class pubsub_msg_t :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pubsub_msg_t) */ {
 public:
  pubsub_msg_t();
  virtual ~pubsub_msg_t();

  pubsub_msg_t(const pubsub_msg_t& from);
  pubsub_msg_t(pubsub_msg_t&& from) noexcept
    : pubsub_msg_t() {
    *this = ::std::move(from);
  }

  inline pubsub_msg_t& operator=(const pubsub_msg_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline pubsub_msg_t& operator=(pubsub_msg_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const pubsub_msg_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pubsub_msg_t* internal_default_instance() {
    return reinterpret_cast<const pubsub_msg_t*>(
               &_pubsub_msg_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(pubsub_msg_t& a, pubsub_msg_t& b) {
    a.Swap(&b);
  }
  inline void Swap(pubsub_msg_t* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline pubsub_msg_t* New() const final {
    return CreateMaybeMessage<pubsub_msg_t>(nullptr);
  }

  pubsub_msg_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<pubsub_msg_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const pubsub_msg_t& from);
  void MergeFrom(const pubsub_msg_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pubsub_msg_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pubsub_msg_t";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pubsub_5fmsg_2eproto);
    return ::descriptor_table_pubsub_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRemoteIPFieldNumber = 1,
    kLengthFieldNumber = 2,
    kTypeFieldNumber = 3,
    kMagicFieldNumber = 4,
  };
  // string remoteIP = 1;
  void clear_remoteip();
  const std::string& remoteip() const;
  void set_remoteip(const std::string& value);
  void set_remoteip(std::string&& value);
  void set_remoteip(const char* value);
  void set_remoteip(const char* value, size_t size);
  std::string* mutable_remoteip();
  std::string* release_remoteip();
  void set_allocated_remoteip(std::string* remoteip);
  private:
  const std::string& _internal_remoteip() const;
  void _internal_set_remoteip(const std::string& value);
  std::string* _internal_mutable_remoteip();
  public:

  // int64 length = 2;
  void clear_length();
  ::PROTOBUF_NAMESPACE_ID::int64 length() const;
  void set_length(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_length() const;
  void _internal_set_length(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 type = 3;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int64 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 magic = 4;
  void clear_magic();
  ::PROTOBUF_NAMESPACE_ID::int64 magic() const;
  void set_magic(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_magic() const;
  void _internal_set_magic(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:pubsub_msg_t)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr remoteip_;
  ::PROTOBUF_NAMESPACE_ID::int64 length_;
  ::PROTOBUF_NAMESPACE_ID::int64 type_;
  ::PROTOBUF_NAMESPACE_ID::int64 magic_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_pubsub_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// pubsub_msg_t

// string remoteIP = 1;
inline void pubsub_msg_t::clear_remoteip() {
  remoteip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& pubsub_msg_t::remoteip() const {
  // @@protoc_insertion_point(field_get:pubsub_msg_t.remoteIP)
  return _internal_remoteip();
}
inline void pubsub_msg_t::set_remoteip(const std::string& value) {
  _internal_set_remoteip(value);
  // @@protoc_insertion_point(field_set:pubsub_msg_t.remoteIP)
}
inline std::string* pubsub_msg_t::mutable_remoteip() {
  // @@protoc_insertion_point(field_mutable:pubsub_msg_t.remoteIP)
  return _internal_mutable_remoteip();
}
inline const std::string& pubsub_msg_t::_internal_remoteip() const {
  return remoteip_.GetNoArena();
}
inline void pubsub_msg_t::_internal_set_remoteip(const std::string& value) {
  
  remoteip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void pubsub_msg_t::set_remoteip(std::string&& value) {
  
  remoteip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pubsub_msg_t.remoteIP)
}
inline void pubsub_msg_t::set_remoteip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  remoteip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pubsub_msg_t.remoteIP)
}
inline void pubsub_msg_t::set_remoteip(const char* value, size_t size) {
  
  remoteip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pubsub_msg_t.remoteIP)
}
inline std::string* pubsub_msg_t::_internal_mutable_remoteip() {
  
  return remoteip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* pubsub_msg_t::release_remoteip() {
  // @@protoc_insertion_point(field_release:pubsub_msg_t.remoteIP)
  
  return remoteip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void pubsub_msg_t::set_allocated_remoteip(std::string* remoteip) {
  if (remoteip != nullptr) {
    
  } else {
    
  }
  remoteip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), remoteip);
  // @@protoc_insertion_point(field_set_allocated:pubsub_msg_t.remoteIP)
}

// int64 length = 2;
inline void pubsub_msg_t::clear_length() {
  length_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 pubsub_msg_t::_internal_length() const {
  return length_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 pubsub_msg_t::length() const {
  // @@protoc_insertion_point(field_get:pubsub_msg_t.length)
  return _internal_length();
}
inline void pubsub_msg_t::_internal_set_length(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  length_ = value;
}
inline void pubsub_msg_t::set_length(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:pubsub_msg_t.length)
}

// int64 type = 3;
inline void pubsub_msg_t::clear_type() {
  type_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 pubsub_msg_t::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 pubsub_msg_t::type() const {
  // @@protoc_insertion_point(field_get:pubsub_msg_t.type)
  return _internal_type();
}
inline void pubsub_msg_t::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  type_ = value;
}
inline void pubsub_msg_t::set_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:pubsub_msg_t.type)
}

// int64 magic = 4;
inline void pubsub_msg_t::clear_magic() {
  magic_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 pubsub_msg_t::_internal_magic() const {
  return magic_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 pubsub_msg_t::magic() const {
  // @@protoc_insertion_point(field_get:pubsub_msg_t.magic)
  return _internal_magic();
}
inline void pubsub_msg_t::_internal_set_magic(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  magic_ = value;
}
inline void pubsub_msg_t::set_magic(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_magic(value);
  // @@protoc_insertion_point(field_set:pubsub_msg_t.magic)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_pubsub_5fmsg_2eproto
